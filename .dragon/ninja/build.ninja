##

target = .dragon/_/usr/lib/liblayout.dylib
builddir = .dragon/build
objdir = .dragon/obj
signdir = .dragon/sign
signtarget = $signdir/usr/lib/liblayout.unsigned
dsymtarget = $signdir/usr/lib/liblayout.nosym
# We use theos for include headers. You can specify any directory that has the /include/ subdirectory we need. 
theosdir = /Users/kritanta/ios/tweaks/theos

ccloc = cc=$$(clang++ --version | grep "InstalledDir:*" | sed "s/InstalledDir: //g" | xargs);cc+="/clang++";
cc = $$cc
ll = $$cc

optim = 2
iosvers = 10.0
arc = -fobjc-arc
archs = armv7 arm64 arm64e
lf = -lobjc -lc++
sdk = $$DRAGONBUILD/sdks/iPhoneOS.sdk
buildtarg = -DTARGET_IPHONE=1 
frameworks = CoreFoundation Foundation UIKit CoreGraphics QuartzCore 
cflags = -std=c99 -Wall -mios-version-min=$iosvers  -isysroot "$sdk" -iframework$sdk/System/Library/Frameworks/ -fcolor-diagnostics -O0 -Wall -ggdb -Werror -DDEBUG -includePrefix.h
lflags = -dynamiclib -ggdb -lsystem.b -L$theosdir/lib -Xlinker -segalign -Xlinker 4000 

pre = fwk=$$(echo "$frameworks" | sed '/^$$/!s/[^ ]* */-framework &/g');arcs=$$(echo "$archs" | sed '/^$$/!s/[^ ]* */-arch &/g');  

rule compile 
    description = Compiling $in
    command = $ccloc $pre $cc $cflags -objective-c -I$theosdir/include -I$theosdir/vendor/include -I$theosdir/include/_fallback $buildtarg $arc -I$$DRAGONBUILD/headers/Preferences.framework/ $$arcs -c $in -o $out

rule link
    description = Linking liblayout
    command = $ccloc $pre $ll $lf $lflags -F$sdk $cflags $$fwk $$arcs -I$theosdir/include -I$theosdir/vendor/include -I$theosdir/include/_fallback  -I$$DRAGONBUILD/headers/Preferences.framework/ $$arcs -F$sdk/System/Library/PrivateFrameworks  -I$theosdir/include -I$theosdir/vendor/include -I$theosdir/include/_fallback  -isysroot $sdk -I$$DRAGONBUILD/headers/Preferences.framework -I$$DRAGONBUILD/headers/ -o $out $in 

rule debug
    description = Generating Debug Symbols
    command = dsymutil "$in"; mv $in $out

rule sign
    description = Signing $out
    command = ldid -S $in; mv $in $target

rule clean
    description = Cleaning Up
    command = rm -rf .dragon/sign

build $builddir/./LLTServer.o : compile ./LLTServer.m

build $builddir/./LLTLayoutProvider.o : compile ./LLTLayoutProvider.m



build $dsymtarget : link $builddir/./LLTServer.o $builddir/./LLTLayoutProvider.o 

build $signtarget : debug $dsymtarget

build $target : sign $signtarget

build cleanup : clean $target

default $target

